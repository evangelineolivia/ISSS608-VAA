---
title: "Hands on Exercise 2"
date: 2025-04-22
date-modified: "last-modified"
execute:
  warning: false
format :
  html:
    number-offset: 1
---

# Beyond ggplot2 Fundamentals

## Overview

-   Use ggrepel functions to precisely control the placement of annotations on graphs.
-   Create publication-quality figures using styling functions from ggthemes and hrbrthemes packages.
-   Combine multiple ggplot2 graphs into a composite figure using the patchwork package.

## Getting Started

### Installing and Loading the Required Libraries

-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.
-   ggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.
-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.
-   patchwork: an R package for preparing composite figure created using ggplot2.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

### Importing data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## Beyond ggplot2 Annotation: ggrepel

One of the challenge in plotting statistical graph is annotation, especially with large number of data points.

::: panel-tabset
## geom_label()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,y=ENGLISH))+
  geom_point()+
  geom_smooth(method=lm,size=0.5)+
  geom_label(aes(label = ID),hjust=0.5,vjust=-0.5)+
  coord_cartesian(xlim=c(0,100), ylim = c(0,100))+
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme_classic()+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## geom_text()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,y=ENGLISH))+
  geom_point()+
  geom_smooth(method=lm,size=0.5)+
  geom_text(aes(label = ID),hjust=0.5,vjust=-0.5)+
  coord_cartesian(xlim=c(0,100), ylim = c(0,100))+
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme_classic()+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```
:::

### Working with ggrepel

[**ggrepel**](https://ggrepel.slowkow.com/index.html) is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in our examples on the right.

We simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` by [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

::: panel-tabset
## geom_label_repel()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## geom_text_repel()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_text_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```
:::

## Beyond ggplot2 Themes

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html), they are: `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`.

::: panel-tabset

## theme_gray()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_gray() +
  ggtitle("Distribution of Maths scores with theme_gray()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_bw()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_bw() +
  ggtitle("Distribution of Maths scores with theme_bw()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_classic()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_classic() +
  ggtitle("Distribution of Maths scores with theme_classic()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_dark()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_dark() +
  ggtitle("Distribution of Maths scores with theme_dark()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_light()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_light() +
  ggtitle("Distribution of Maths scores with theme_light()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_linedraw()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_light() +
  ggtitle("Distribution of Maths scores with theme_linedraw()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_minimal()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_minimal() +
  ggtitle("Distribution of Maths scores with theme_minimal()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## theme_void()
```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100, color = "#A94442", fill = "#DBA39A") +
  theme_void() +
  ggtitle("Distribution of Maths scores with theme_void()")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

:::

### Working with ggtheme package
[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/index.html) provides ['ggplot2' themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), 'Stata', 'Excel', and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.

In the example below, *The Economist* theme is used.

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="#A94442", 
                 fill="#DBA39A") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```

### Working with hrbthems package

[**hrbrthemes**](https://cran.r-project.org/web/packages/hrbrthemes/index.html) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

:::: callout-note
-   `axis_title_size` argument is used to increase the font size of the axis title to 18,
-   `base_size` argument is used to increase the default axis label to 15, and
-   `grid` argument is used to remove the x-axis grid lines.
::::

::: panel-tabset
## Default
```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="#A94442", 
                 fill="#DBA39A") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```

## Customized
```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="#A94442", 
                 fill="#DBA39A") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18, 
              base_size = 15, 
              grid = "Y") +
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```
:::

## Beyond Single Graph
It's common to need multiple graphs to effectively convey a visual story. Several ggplot2 extensions offer tools for combining multiple plots into a single figure.

First, let us create three statistical graphics:
```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="#A94442", 
                 fill="#DBA39A") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") +
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))

p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="#A94442", 
                 fill="#DBA39A") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") +
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")+
  theme(plot.background = element_rect(fill = "#FEFCF3",color = NA))
```
### Creating Composite Graphics: pathwork methods

There are several ggplot2 extension's functions support the needs to prepare composite figure by combining several graphs such as [`grid.arrange()`](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [`plot_grid()`](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/index.html) package. In this section, I am going to shared with you an ggplot2 extension called [**patchwork**](https://patchwork.data-imaginist.com/index.html) which is specially designed for combining separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where we can create layouts super easily. Here's the general syntax that combines:

-   Two-Column Layout using the Plus Sign +.
-   Parenthesis () to create a subplot group.
-   Two-Row Layout using the Division Sign `/`

### Combining two ggplot2 graphs
```{r}
p1 + p2
```

### Combining three ggplot2 graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

-   "/" operator to stack two ggplot2 graphs,
-   "\|" operator to place the plots beside each other,
-   "()" operator the define the sequence of the plotting.

```{r}
(p1 / p2) | p3
```

### Creating a composite figure with tag
In order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.

::: panel-tabset
## tag_levels = 'I'

```{r}
((p1/p2)|p3) + 
  plot_annotation(tag_levels = 'I')
```

## tag_levels = 'A'

```{r}
((p1+p2)/p3) + 
  plot_annotation(tag_levels = 'A')
```

## tag_levels = '1'

```{r}
((p1/p2)|p3) + 
  plot_annotation(tag_levels = '1')
```
:::

### Creating figure with insert

Beside providing functions to place plots next to each other based on the provided layout. With [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork**, we can place one or several plots or graphic elements freely on top or below another plot.

```{r}
p3 + inset_element(p2, left = 0.02, bottom = 0.7, right = 0.5,top = 1)
```

### Creating a composite figure by using patchwork and ggtheme
Figure below is created by combining patchwork and `theme_economist()` of ggthemes package discussed earlier.

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```


## Reference

-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)
-   [ggrepel](https://ggrepel.slowkow.com/index.html)
-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)
-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)
-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)
-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)
-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)
