{
  "hash": "150d0d8fac91fde879d193657192573b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands on Exercise 6\"\ndescription : Visualising and Analysing Time-Oriented Data\ndate: 2025-05-17\ndate-modified: \"last-modified\"\nexecute:\n  warning: false\n  freeze: true\nformat:\n  html:\n    number-offset: 9\n---\n\n\n\n\n\n# Visualising and Analysing Time-Oriented Data\n\n## Learning Outcome\n\nBy the end of this hands-on exercise, we will be able to create the following data visualizations using R packages:\n\n- Calendar heatmap using ggplot2 functions\n\n- Cycle plot using ggplot2 functions\n\n- Slopegraph\n\n- Horizon chart\n\n## Getting Started\n\nWe will first load the following R packages: scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, and tidyverse.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)\n```\n:::\n\n\n\n\n\n## Plotting Calendar Heatmap\n\n![](img/image01.png)\n\nBy the end of this section, we will be able to:\n\n- Create a calendar heatmap using `ggplot2` and its extensions\n\n- Write custom functions in R\n\n- Extract and manipulate date- and time-related fields using base R and the lubridate package\n\n- Carry out data preparation tasks using the `tidyr` and `dplyr` packages\n\n### The Data\n\nFor the purpose of this hands-on exercise, eventlog.csv file will be used. This data file consists of 199,999 rows of time-series cyber attack records by country.\n\n### Importing the Data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattacks <- read_csv(\"data/eventlog.csv\")\n```\n:::\n\n\n\n\n\n### Examining the Data Structure\n\nThe `kable()` function can be used to display and review the structure of an imported data frame in a clean, readable table format.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(attacks))\n```\n\n::: {.cell-output-display}\n\n\n|timestamp           |source_country |tz              |\n|:-------------------|:--------------|:---------------|\n|2015-03-12 15:59:16 |CN             |Asia/Shanghai   |\n|2015-03-12 16:00:48 |FR             |Europe/Paris    |\n|2015-03-12 16:02:26 |CN             |Asia/Shanghai   |\n|2015-03-12 16:02:38 |US             |America/Chicago |\n|2015-03-12 16:03:22 |CN             |Asia/Shanghai   |\n|2015-03-12 16:03:45 |CN             |Asia/Shanghai   |\n\n\n:::\n:::\n\n\n\n\n\nThere are three columns, timestamp, source_country and tz.\n\n- `timestamp` field stores date-time values in POSIXct format.\n- `source_country` field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\n- `tz` field stores time zone of the source IP address.\n\n### Data Preparation\n\n**Step 1 : Deriving weekday and hour of day fields **\n\nBefore we can plot the calender heatmap, two new fields namely wkday and hour need to be derived. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhr_wkday <- function(ts, sc, tz) {\n  real_times <- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt <- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n```\n:::\n\n\n\n\n\n::: callout-note {appearance=\"simple\"}\n-   [`ymd_hms()`](https://lubridate.tidyverse.org/reference/ymd_hms.html) and [`hour()`](https://lubridate.tidyverse.org/reference/hour.html) are from [**lubridate**](https://lubridate.tidyverse.org/) package, and\n-   [`weekdays()`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/weekdays) is a **base** R function.\n:::\n\n**Step 2 : Deriving the attacks tibble data frame **\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwkday_levels <- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks <- attacks %>%\n  group_by(tz) %>%\n  do(hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %>% \n  ungroup() %>% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nattacks\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 199,999 × 4\n   tz           source_country wkday    hour \n   <chr>        <chr>          <fct>    <fct>\n 1 Africa/Cairo BG             Saturday 20   \n 2 Africa/Cairo TW             Sunday   6    \n 3 Africa/Cairo TW             Sunday   8    \n 4 Africa/Cairo CN             Sunday   11   \n 5 Africa/Cairo US             Sunday   15   \n 6 Africa/Cairo CA             Monday   11   \n 7 Africa/Cairo GB             Monday   15   \n 8 Africa/Cairo CN             Monday   16   \n 9 Africa/Cairo CN             Monday   17   \n10 Africa/Cairo CN             Thursday 21   \n# ℹ 199,989 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n::: callout-note {appearance=\"simple\"}\nBeside extracting the necessary data into *attacks* data frame, `mutate()` of **dplyr** package is used to convert *wkday* and *hour* fields into **factor** so they'll be ordered when plotting\n:::\n\nTable below shows the tidy tibble table after processing.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(attacks))\n```\n\n::: {.cell-output-display}\n\n\n|tz           |source_country |wkday    |hour |\n|:------------|:--------------|:--------|:----|\n|Africa/Cairo |BG             |Saturday |20   |\n|Africa/Cairo |TW             |Sunday   |6    |\n|Africa/Cairo |TW             |Sunday   |8    |\n|Africa/Cairo |CN             |Sunday   |11   |\n|Africa/Cairo |US             |Sunday   |15   |\n|Africa/Cairo |CA             |Monday   |11   |\n\n\n:::\n:::\n\n\n\n\n\n### Building the Calendar Heatmaps\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped <- attacks %>% \n  count(wkday, hour) %>% \n  ungroup() %>%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte() + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex06_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}