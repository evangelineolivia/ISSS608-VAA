[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Evangeline Olivia’s Visual Analytics Coursework",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications website. In this website, you will find my coursework prepared for this course.\n\nLatest Work :\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 1\n\n\nA Layered Grammar of Graphics ggplot2 methods\n\n\n\nApr 18, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 2\n\n\nBeyond ggplot2 Fundamentals\n\n\n\nApr 22, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 3b\n\n\nProgramming Animated Statistical Graphics with R\n\n\n\nApr 29, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 3a\n\n\nProgramming Interactive Data Visualisation with R\n\n\n\nApr 29, 2025\n\n\n\n\n\n\n\n\n\n\n\nTake Home Exercise 1\n\n\nSingapore Population Analysis\n\n\n\nMay 01, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 4a\n\n\nVisualising Distribution\n\n\n\nMay 04, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 4c\n\n\nVisualising Uncertainty\n\n\n\nMay 05, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 4b\n\n\nVisual Statistical Analysis\n\n\n\nMay 05, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 4d\n\n\nFunnel Plots for Fair Comparisons\n\n\n\nMay 06, 2025\n\n\n\n\n\n\n\n\n\n\n\nTake Home Exercise 1 Feedback\n\n\nLearn from Peers\n\n\n\nMay 08, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 5\n\n\nModelling, Visualising and Analysing Network Data with R\n\n\n\nMay 11, 2025\n\n\n\n\n\n\n\n\n\n\n\nTake Home Exercise 2\n\n\nVAST Challenge 2025 Mini-Challenge 1\n\n\n\nMay 13, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 6\n\n\nVisualising and Analysing Time-Oriented Data\n\n\n\nMay 17, 2025\n\n\n\n\n\n\n\n\n\n\n\nIn Class Exercise 3\n\n\nExploring VAST 2025 Mini Challenge 1\n\n\n\nMay 17, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 8c\n\n\nChoropleth Mapping with R\n\n\n\nJun 06, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 8b\n\n\nVisualising Geospatial Point Data\n\n\n\nJun 06, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 8a\n\n\nChoropleth Mapping with R\n\n\n\nJun 06, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 9e\n\n\nTreemap Visualisation with R\n\n\n\nJun 14, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 9d\n\n\nVisual Multivariate Analysis with Parallel Coordinates Plot\n\n\n\nJun 14, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 9c\n\n\nHeatmap for Visualising and Analysing Multivariate Data\n\n\n\nJun 14, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 9b\n\n\nVisual Correlation Analysis\n\n\n\nJun 14, 2025\n\n\n\n\n\n\n\n\n\n\n\nHands on Exercise 9a\n\n\nCreating Ternary Plot with R\n\n\n\nJun 14, 2025\n\n\n\n\n\n\n\n\n\n\n\nTake Home Exercise 3\n\n\nPrototype Module for Shiny Application\n\n\n\n\n\n\n\n\n\n\nIn Class Exercise 01\n\n\nSuperstore Sales and Profit Report\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "In this take-home exercise, we are required to select one of the modules of our proposed Shiny application (Group Project) and complete the following tasks\n\nTo evaluate and determine the necessary R packages needed for our Shiny application are supported in R CRAN,\nTo prepare and test that the specific R codes can run and returns the correct output as expected,\nTo determine the parameters and outputs that will be exposed on the Shiny applications,\nTo select the appropriate Shiny UI components for exposing the parameters determined above, and\nTo include a section called UI design for the different components of the UIs for the proposed design.\n\n\n\n\nOur project will be using data from the VAST Challenge 2025 Mini-Challenge 1.\nSpecifically, our project will focus on Mini-Challenge 1, where participants are provided with a knowledge graph containing recording artists, albums, collaborations, concerts, influences, and more. The goal is to develop visual analytics approaches to trace the rise of one artist and predict who will be the next to break out.\nIn addition, we plan to develop the following Shiny applications:\n\nShiny App 1: Sailor Shift’s Career Explorer\nShiny App 2: Oceanus Folk Influence Tracker\nShiny App 3: Rising Star Prediction Dashboard\n\nFor this take-home exercise, we will be providing the prototype module report and the UIs designed for the above applications.\n\n\n\n\npacman::p_load(tidyverse, jsonlite,\n               tidygraph, ggraph, igraph, plotly, visNetwork,ggtext, ggiraph,patchwork,\n               kableExtra, showtext,lubridate)\n\n\n\n\n\ndata &lt;- fromJSON(\"data/MC1_graph.json\")\n\n\n\n\nThe storyboard is designed to visually represent the user’s journey within the R Shiny dashboard applications. It acts as a bridge between research insights and user interaction, illustrating how findings are translated into visual and interactive elements. The UI design and interactive features are thoughtfully developed to enable seamless exploration and analysis of data including network components helping users identify key patterns and trace the rising of artist in the music industry.\nThe prototype is organized into three main focus areas:\n\nSailor Shift’s Career Explorer\nOceanus Folk Influence Tracker\nRising Star Prediction Dashboard\n\n\n\n\n\n\nThis tab serves as the landing page for Sailor Shift’s Career Explorer module. It provides a high-level summary of the artist’s musical trajectory. As shown in the figure below, the Overview sub-tab consolidates key statistics into a series of information cards that allow users to quickly grasp the scope and success of her career.\nCareer metrics display, showing:\n\nYears active\nNumber of releases\nNumber of collaborators\nNumber of creative roles\nNumber of charted works\nChart success ratio\n\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI for Overview tab - Sailor Shift’s Career Explorer\nSailorOverviewRow1 &lt;- fluidRow(\n  tabsetPanel(\n    tabPanel(\"Overview\", \n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      ),\n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      )\n    )\n  )\n)\n\n# Server Components\n \noutput$activeYears &lt;- renderValueBox({})\noutput$totalReleases &lt;- renderValueBox({})\noutput$collaborators &lt;- renderValueBox({})\noutput$creativeRoles &lt;- renderValueBox({})\noutput$chartedWorks &lt;- renderValueBox({})\noutput$chartSuccess &lt;- renderValueBox({})\n\n\n\n\n\nThe Career Timeline tab enables users to interactively explore Sailor Shift’s music releases over the years. Users can:\n\nFilter releases by type (Album or Song)\nSelect a year range using a slider\nRead description text that updates dynamically\nView a bar chart displaying the number of releases per year by type\nExamine a detailed data table of Sailor’s works with attributes like title, release year, genre, and whether the work was notable\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI \nCareerTimelineUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Career Timeline\"),\n  \n  tabsetPanel(\n    tabPanel(\"Career Timeline\",\n      fluidRow(\n        column(\n          selectInput()),\n          sliderInput(),\n          textAreaInput()\n        ),\n        column(\n          plotOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$release_barplot &lt;- renderPlot({})\noutput$release_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Collaborations tab provides a detailed network-based view of Sailor Shift’s creative relationships. It includes:\nNode and Relation Type Filters: These checkboxes allow users to filter the network by the type of entity (e.g., person, song, album) or relationship (e.g., ComposerOf, LyricistOf).\nInteractive Network Plot: A central network visualization shows Sailor at the center, connected to collaborators through edges labeled with their creative roles.\nDescriptive Panel: Offers a placeholder for dynamic text or analysis summaries.\nData Table: Lists each collaborator with their name, relation to the work, work title, type (Album/Song), and release date.\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nSailorCollabUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Collaborations\"),\n  \n  tabsetPanel(\n    tabPanel(\"Collaborations\",\n      fluidRow(\n        column( \n          checkboxGroupInput(), selected =),\n          checkboxGroupInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$collab_network &lt;- renderVisNetwork({})\noutput$collab_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Influence Network tab visualizes how Sailor Shift’s musical works relate to others through influence connections. It allows users to:\n\nFilter by Genre (e.g., Doom Metal, Blues Rock)\nFilter by Influence Type (e.g., CoverOf, InStyleOf, DirectlySamples)\nSearch and Select a Work from a dropdown list for focused exploration\nView a directed network plot that visually maps how her songs and albums connect to or are influenced by other artists’ works\nRead descriptive context in a dedicated panel\nExamine a data table listing all pairwise influence relationships, their types, and associated genres\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nInfluenceNetworkUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Influence Network\"),\n  \n  tabsetPanel(\n    tabPanel( \n      fluidRow(\n        column( \n          selectInput(, choices = c(), selected =),\n          checkboxGroupInput(\n                             choices = c(),\n                             selected = c()),\n          selectizeInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$influence_graph&lt;- renderVisNetwork({})\noutput$influence_table &lt;- DT::renderDataTable({})\n\n\n\n\n\n\n\n\nThe Overview tab within the Oceanus Folk Influence Tracker module provides users with a macro-level snapshot of the genre’s scope and evolution.\nKey features include:\nMetric summary cards for:\n\nTotal performers in the Oceanus Folk community\nTotal music releases\nSpan of activity years\nA stacked bar chart visualizing the number of songs vs albums released over time, helping users observe patterns in creative output (e.g., genre peaks, format preferences)\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nOceanusFolkOverviewUI &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk Overview\"),\n  \n  tabsetPanel(\n    tabPanel(\n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      ),\n      br(),\n      fluidRow(\n        column(\n          plotOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$totalperformers &lt;- renderValueBox({})\noutput$totalReleases &lt;- renderValueBox({})\noutput$activity_year &lt;- renderValueBox({})\n\noutput$folk_release_chart &lt;- renderPlot({})\n\n\n\n\n\nThe Influence Timeline tab visualizes how Oceanus Folk has contributed to musical influence across time. Key components include:\n\nCheckbox filters to select different influence types (e.g., CoverOf, InterpolatesFrom, LyricalReferenceTo)\nA year range slider to narrow the temporal window of interest\nA multicolored line chart showing trends in the number of influence connections (by type) over time\nA description box for narrative or insight generation\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nInfluenceTimelineUI &lt;- fluidPage(\n  titlePanel(),\n  \n  tabsetPanel(\n    tabPanel(\n      fluidRow(\n        column(\n          checkboxGroupInput( \n            choices = c(),\n            selected = c()),\n          sliderInput(),\n          textAreaInput()\n        ),\n        column(\n          plotOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$influence_timeline_chart &lt;- renderPlot({})\n\n\n\n\n\nThe Outward Impact tab explores the ripple effect of the Oceanus Folk genre across genres and artists. It features:\n\nA genre filter dropdown to narrow results by specific genres influenced\nA central network graph visualizing songs/albums influenced by Oceanus Folk across different genres and artists\nA description box for contextual notes or automated narrative summaries\n\nTwo tables: - One summarizing the number of songs per genre influenced by Oceanus Folk - Another listing artists with the most notable songs influenced by the genre\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nOutwardImpactUI &lt;- fluidPage(\n  titlePanel(\"Genre & Artist Influenced by Oceanus Folk\"),\n  \n  tabsetPanel(\n    tabPanel( \n      fluidRow(\n        column(\n          selectInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      fluidRow(\n        column(\n          h5(),\n          DT::dataTableOutput()\n        ),\n        column(\n          h5(),\n          DT::dataTableOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$influenced_network &lt;- renderVisNetwork({})\noutput$influenced_genre_table &lt;- DT::renderDataTable({})\noutput$influenced_artist_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Roots tab helps users uncover the foundation influences behind Oceanus Folk songs.\nUsers can:\n\nFilter the network by genre to explore specific stylistic influences\nView a network graph highlighting genres and songs that influenced Oceanus Folk, with Oceanus Folk nodes and influenced song nodes distinctly colored\nRead a dynamic description that explains the context and insights\nAnalyze a table summarizing which genres most frequently influenced Oceanus Folk tracks\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nRootsTab &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk’s Evolving Roots\"),\n  \n  fluidRow(\n    column(\n      selectInput( inputId, label, choices = c()), # Dropdown to filter genre\n      \n      tabsetPanel(\n        tabPanel(\n          title = \"Description\",\n          verbatimTextOutput(\"description_text\") # Descriptive explanation\n          )\n      )\n    ),\n    \n    column(\n      plotOutput() # Display network visualization of genre-song influence\n    )\n  ),\n  \n  fluidRow(\n    column(\n      DT::dataTableOutput() # Data table showing genre and count\n    )\n  )\n)\n\n\n# Server\noutput$roots_description_text &lt;- renderText({})\noutput$roots_network &lt;- renderPlot({})\noutput$roots_genre_table &lt;- DT::renderDataTable({})\n\n\n\n\n\n\n\n\nThe Activity tab provides a comparative view of artists’ release behaviors and performance history.\nUsers can:\n\nSelect up to three artists (A, B, and C) for side-by-side comparison\nView individual network graphs showing each artist’s release and influence structure\nAnalyze a timeline line chart of songs or albums released by the selected artists over time\nTrack activity trends to identify peak creative periods and gaps across artist careers\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsActivityTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Activity\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist A\n    ),\n    column(\n      plotOutput() # Plot for Artist B\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist C\n    ),\n    column(\n      plotOutput() # Line graph comparing release trends\n    )\n  )\n)\n\n# Server\n\noutput$artist_a_network &lt;- renderPlot({})\noutput$artist_b_network &lt;- renderPlot({})\noutput$artist_c_network &lt;- renderPlot({})\noutput$release_timeline &lt;- renderPlot({})\n\n\n\n\n\nThe Contribution tab highlights the creative roles played by artists in Oceanus Folk.\nUsers can:\n\nSelect and compare up to three artists (A, B, and C)\nExplore network graphs that visualize each artist’s contributions as a composer, lyricist, or producer\nAnalyze a contribution table showing the number of works attributed to each role\nIdentify key contributors to the genre’s development through their behind-the-scenes impact\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsContributionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Contribution\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Contribution_table\n    )\n  )\n)\n\n# Server\noutput$contrib_graph_a &lt;- renderPlot({}) # Network graph for Artist A's contributions (ComposerOf, LyricistOf, ProducerOf)\noutput$contrib_graph_b &lt;- renderPlot({}) # Network graph for Artist B's contributions\noutput$contrib_graph_c &lt;- renderPlot({}) # Network graph for Artist C's contributions\n\noutput$contribution_table &lt;- DT::renderDataTable({}) # DataTable showing ComposerOf, LyricistOf, and ProducerOf for selected artists\n\n\n\n\n\nThe Artist’s Collaboration tab showcases the collaborative relationships of Oceanus Folk artists. Users can:\n\nSelect and compare up to three artists (A, B, and C)\nVisualize each artist’s collaboration network with individuals and musical groups\nAnalyze differences in collaboration patterns using structured network graphs\nRefer to a summary table that lists the number of collaborations with persons and musical groups per artist\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsCollaborationTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Collaboration\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Collaboration_table\n    )\n  )\n)\n\n# Server\noutput$collab_graph_a &lt;- renderPlot({}) # Network plot showing Artist A's collaborations\noutput$collab_graph_b &lt;- renderPlot({}) # Network plot showing Artist B's collaborations\noutput$collab_graph_c &lt;- renderPlot({}) # Network plot showing Artist C's collaborations\noutput$collaboration_table &lt;- DT::renderDataTable({}) # Table showing artist + number of collaborations with Person & MusicalGroup\n\n\n\n\n\nThe Public Recognition tab compares how often each artist’s work charted in public rankings. Users can:\n\nSelect up to three artists (A, B, and C) for comparison\nView a stacked bar chart that contrasts the number of charted versus uncharted releases per artist\nExplore a detailed table listing each artist’s songs or albums along with their release year, type, and chart status\nAnalyze recognition trends and identify which artists consistently achieve public acclaim\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\n\nPublicRecognitionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Charted vs Uncharted Songs\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Stacked bar chart for releases\n    )\n  ),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Detailed list of songs/albums and chart status\n    )\n  )\n)\n\n# Server\noutput$charted_vs_uncharted &lt;- renderPlot({}) # Create a stacked bar chart showing Charted vs Uncharted songs per artist\noutput$charted_table &lt;- DT::renderDataTable({}) # Table with artist name, song/album, year, type, and charted status\n\n\n\n\n\nThe Predictions tab identifies emerging talents most likely to become the next big names in Oceanus Folk. Users can:\n\nExplore a ranked table of rising stars, sorted by calculated “Rising Star Score”\nReview artist attributes including first release year, total works, collaborations, freshness, and inactivity\nUnderstand how metrics like charted ratio and creative activity contribute to the prediction\nRead a description that explains how the prediction model works and what each variable means\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\n\nPredictionsTab &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk Next Rising Star\"),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Main prediction result table\n    )\n  ),\n  \n  fluidRow(\n    column(tabsetPanel(\n        tabPanel(\n          title = \"Description\",\n          wellPanel(verbatimTextOutput(\"rising_star_description\") # Descriptive Explanation\n          )\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$rising_star_table &lt;- DT::renderDataTable({}) # Table with columns like: Artist, ID, First Release, Total Works, etc.\noutput$rising_star_description &lt;- renderText({}) # Explanation of the Rising Star Score and what users should interpret"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#the-task",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#the-task",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "In this take-home exercise, we are required to select one of the modules of our proposed Shiny application (Group Project) and complete the following tasks\n\nTo evaluate and determine the necessary R packages needed for our Shiny application are supported in R CRAN,\nTo prepare and test that the specific R codes can run and returns the correct output as expected,\nTo determine the parameters and outputs that will be exposed on the Shiny applications,\nTo select the appropriate Shiny UI components for exposing the parameters determined above, and\nTo include a section called UI design for the different components of the UIs for the proposed design."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#getting-started",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#getting-started",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "Our project will be using data from the VAST Challenge 2025 Mini-Challenge 1.\nSpecifically, our project will focus on Mini-Challenge 1, where participants are provided with a knowledge graph containing recording artists, albums, collaborations, concerts, influences, and more. The goal is to develop visual analytics approaches to trace the rise of one artist and predict who will be the next to break out.\nIn addition, we plan to develop the following Shiny applications:\n\nShiny App 1: Sailor Shift’s Career Explorer\nShiny App 2: Oceanus Folk Influence Tracker\nShiny App 3: Rising Star Prediction Dashboard\n\nFor this take-home exercise, we will be providing the prototype module report and the UIs designed for the above applications."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#r-packages",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "pacman::p_load(tidyverse, jsonlite,\n               tidygraph, ggraph, igraph, plotly, visNetwork,ggtext, ggiraph,patchwork,\n               kableExtra, showtext,lubridate)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#dataset",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#dataset",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "data &lt;- fromJSON(\"data/MC1_graph.json\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#storyboard",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#storyboard",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "The storyboard is designed to visually represent the user’s journey within the R Shiny dashboard applications. It acts as a bridge between research insights and user interaction, illustrating how findings are translated into visual and interactive elements. The UI design and interactive features are thoughtfully developed to enable seamless exploration and analysis of data including network components helping users identify key patterns and trace the rising of artist in the music industry.\nThe prototype is organized into three main focus areas:\n\nSailor Shift’s Career Explorer\nOceanus Folk Influence Tracker\nRising Star Prediction Dashboard"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#sailor-shifts-career-explorer",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#sailor-shifts-career-explorer",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "This tab serves as the landing page for Sailor Shift’s Career Explorer module. It provides a high-level summary of the artist’s musical trajectory. As shown in the figure below, the Overview sub-tab consolidates key statistics into a series of information cards that allow users to quickly grasp the scope and success of her career.\nCareer metrics display, showing:\n\nYears active\nNumber of releases\nNumber of collaborators\nNumber of creative roles\nNumber of charted works\nChart success ratio\n\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI for Overview tab - Sailor Shift’s Career Explorer\nSailorOverviewRow1 &lt;- fluidRow(\n  tabsetPanel(\n    tabPanel(\"Overview\", \n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      ),\n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      )\n    )\n  )\n)\n\n# Server Components\n \noutput$activeYears &lt;- renderValueBox({})\noutput$totalReleases &lt;- renderValueBox({})\noutput$collaborators &lt;- renderValueBox({})\noutput$creativeRoles &lt;- renderValueBox({})\noutput$chartedWorks &lt;- renderValueBox({})\noutput$chartSuccess &lt;- renderValueBox({})\n\n\n\n\n\nThe Career Timeline tab enables users to interactively explore Sailor Shift’s music releases over the years. Users can:\n\nFilter releases by type (Album or Song)\nSelect a year range using a slider\nRead description text that updates dynamically\nView a bar chart displaying the number of releases per year by type\nExamine a detailed data table of Sailor’s works with attributes like title, release year, genre, and whether the work was notable\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI \nCareerTimelineUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Career Timeline\"),\n  \n  tabsetPanel(\n    tabPanel(\"Career Timeline\",\n      fluidRow(\n        column(\n          selectInput()),\n          sliderInput(),\n          textAreaInput()\n        ),\n        column(\n          plotOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$release_barplot &lt;- renderPlot({})\noutput$release_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Collaborations tab provides a detailed network-based view of Sailor Shift’s creative relationships. It includes:\nNode and Relation Type Filters: These checkboxes allow users to filter the network by the type of entity (e.g., person, song, album) or relationship (e.g., ComposerOf, LyricistOf).\nInteractive Network Plot: A central network visualization shows Sailor at the center, connected to collaborators through edges labeled with their creative roles.\nDescriptive Panel: Offers a placeholder for dynamic text or analysis summaries.\nData Table: Lists each collaborator with their name, relation to the work, work title, type (Album/Song), and release date.\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nSailorCollabUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Collaborations\"),\n  \n  tabsetPanel(\n    tabPanel(\"Collaborations\",\n      fluidRow(\n        column( \n          checkboxGroupInput(), selected =),\n          checkboxGroupInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$collab_network &lt;- renderVisNetwork({})\noutput$collab_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Influence Network tab visualizes how Sailor Shift’s musical works relate to others through influence connections. It allows users to:\n\nFilter by Genre (e.g., Doom Metal, Blues Rock)\nFilter by Influence Type (e.g., CoverOf, InStyleOf, DirectlySamples)\nSearch and Select a Work from a dropdown list for focused exploration\nView a directed network plot that visually maps how her songs and albums connect to or are influenced by other artists’ works\nRead descriptive context in a dedicated panel\nExamine a data table listing all pairwise influence relationships, their types, and associated genres\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nInfluenceNetworkUI &lt;- fluidPage(\n  titlePanel(\"Sailor Shift’s Influence Network\"),\n  \n  tabsetPanel(\n    tabPanel( \n      fluidRow(\n        column( \n          selectInput(, choices = c(), selected =),\n          checkboxGroupInput(\n                             choices = c(),\n                             selected = c()),\n          selectizeInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      DT::dataTableOutput()\n    )\n  )\n)\n\n#Server\noutput$influence_graph&lt;- renderVisNetwork({})\noutput$influence_table &lt;- DT::renderDataTable({})"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#oceanus-folk-influence-tracker",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#oceanus-folk-influence-tracker",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "The Overview tab within the Oceanus Folk Influence Tracker module provides users with a macro-level snapshot of the genre’s scope and evolution.\nKey features include:\nMetric summary cards for:\n\nTotal performers in the Oceanus Folk community\nTotal music releases\nSpan of activity years\nA stacked bar chart visualizing the number of songs vs albums released over time, helping users observe patterns in creative output (e.g., genre peaks, format preferences)\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nOceanusFolkOverviewUI &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk Overview\"),\n  \n  tabsetPanel(\n    tabPanel(\n      fluidRow(\n        valueBox(),\n        valueBox(),\n        valueBox()\n      ),\n      br(),\n      fluidRow(\n        column(\n          plotOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$totalperformers &lt;- renderValueBox({})\noutput$totalReleases &lt;- renderValueBox({})\noutput$activity_year &lt;- renderValueBox({})\n\noutput$folk_release_chart &lt;- renderPlot({})\n\n\n\n\n\nThe Influence Timeline tab visualizes how Oceanus Folk has contributed to musical influence across time. Key components include:\n\nCheckbox filters to select different influence types (e.g., CoverOf, InterpolatesFrom, LyricalReferenceTo)\nA year range slider to narrow the temporal window of interest\nA multicolored line chart showing trends in the number of influence connections (by type) over time\nA description box for narrative or insight generation\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nInfluenceTimelineUI &lt;- fluidPage(\n  titlePanel(),\n  \n  tabsetPanel(\n    tabPanel(\n      fluidRow(\n        column(\n          checkboxGroupInput( \n            choices = c(),\n            selected = c()),\n          sliderInput(),\n          textAreaInput()\n        ),\n        column(\n          plotOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$influence_timeline_chart &lt;- renderPlot({})\n\n\n\n\n\nThe Outward Impact tab explores the ripple effect of the Oceanus Folk genre across genres and artists. It features:\n\nA genre filter dropdown to narrow results by specific genres influenced\nA central network graph visualizing songs/albums influenced by Oceanus Folk across different genres and artists\nA description box for contextual notes or automated narrative summaries\n\nTwo tables: - One summarizing the number of songs per genre influenced by Oceanus Folk - Another listing artists with the most notable songs influenced by the genre\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nOutwardImpactUI &lt;- fluidPage(\n  titlePanel(\"Genre & Artist Influenced by Oceanus Folk\"),\n  \n  tabsetPanel(\n    tabPanel( \n      fluidRow(\n        column(\n          selectInput(),\n          textAreaInput()\n        ),\n        column(\n          visNetworkOutput()\n        )\n      ),\n      br(),\n      fluidRow(\n        column(\n          h5(),\n          DT::dataTableOutput()\n        ),\n        column(\n          h5(),\n          DT::dataTableOutput()\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$influenced_network &lt;- renderVisNetwork({})\noutput$influenced_genre_table &lt;- DT::renderDataTable({})\noutput$influenced_artist_table &lt;- DT::renderDataTable({})\n\n\n\n\n\nThe Roots tab helps users uncover the foundation influences behind Oceanus Folk songs.\nUsers can:\n\nFilter the network by genre to explore specific stylistic influences\nView a network graph highlighting genres and songs that influenced Oceanus Folk, with Oceanus Folk nodes and influenced song nodes distinctly colored\nRead a dynamic description that explains the context and insights\nAnalyze a table summarizing which genres most frequently influenced Oceanus Folk tracks\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nRootsTab &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk’s Evolving Roots\"),\n  \n  fluidRow(\n    column(\n      selectInput( inputId, label, choices = c()), # Dropdown to filter genre\n      \n      tabsetPanel(\n        tabPanel(\n          title = \"Description\",\n          verbatimTextOutput(\"description_text\") # Descriptive explanation\n          )\n      )\n    ),\n    \n    column(\n      plotOutput() # Display network visualization of genre-song influence\n    )\n  ),\n  \n  fluidRow(\n    column(\n      DT::dataTableOutput() # Data table showing genre and count\n    )\n  )\n)\n\n\n# Server\noutput$roots_description_text &lt;- renderText({})\noutput$roots_network &lt;- renderPlot({})\noutput$roots_genre_table &lt;- DT::renderDataTable({})"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#section",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#section",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "The Activity tab provides a comparative view of artists’ release behaviors and performance history.\nUsers can:\n\nSelect up to three artists (A, B, and C) for side-by-side comparison\nView individual network graphs showing each artist’s release and influence structure\nAnalyze a timeline line chart of songs or albums released by the selected artists over time\nTrack activity trends to identify peak creative periods and gaps across artist careers\n\n\n\n\nCode\n# UI\nArtistsActivityTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Activity\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist A\n    ),\n    column(\n      plotOutput() # Plot for Artist B\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist C\n    ),\n    column(\n      plotOutput() # Line graph comparing release trends\n    )\n  )\n)\n\n# Server\n\noutput$artist_a_network &lt;- renderPlot({})\noutput$artist_b_network &lt;- renderPlot({})\noutput$artist_c_network &lt;- renderPlot({})\noutput$release_timeline &lt;- renderPlot({})\n\n\n\n\n\nThe Contribution tab highlights the creative roles played by artists in Oceanus Folk.\nUsers can:\n\nSelect and compare up to three artists (A, B, and C)\nExplore network graphs that visualize each artist’s contributions as a composer, lyricist, or producer\nAnalyze a contribution table showing the number of works attributed to each role\nIdentify key contributors to the genre’s development through their behind-the-scenes impact\n\n\n\n\nCode\n# UI\nArtistsContributionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Contribution\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Contribution_table\n    )\n  )\n)\n\n# Server\noutput$contrib_graph_a &lt;- renderPlot({}) # Network graph for Artist A's contributions (ComposerOf, LyricistOf, ProducerOf)\noutput$contrib_graph_b &lt;- renderPlot({}) # Network graph for Artist B's contributions\noutput$contrib_graph_c &lt;- renderPlot({}) # Network graph for Artist C's contributions\n\noutput$contribution_table &lt;- DT::renderDataTable({}) # DataTable showing ComposerOf, LyricistOf, and ProducerOf for selected artists\n\n\n\n\n\nThe Artist’s Collaboration tab showcases the collaborative relationships of Oceanus Folk artists. Users can:\n\nSelect and compare up to three artists (A, B, and C)\nVisualize each artist’s collaboration network with individuals and musical groups\nAnalyze differences in collaboration patterns using structured network graphs\nRefer to a summary table that lists the number of collaborations with persons and musical groups per artist\n\n\n\n\nCode\n# UI\nArtistsCollaborationTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Collaboration\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Collaboration_table\n    )\n  )\n)\n\n# Server\noutput$collab_graph_a &lt;- renderPlot({}) # Network plot showing Artist A's collaborations\noutput$collab_graph_b &lt;- renderPlot({}) # Network plot showing Artist B's collaborations\noutput$collab_graph_c &lt;- renderPlot({}) # Network plot showing Artist C's collaborations\noutput$collaboration_table &lt;- DT::renderDataTable({}) # Table showing artist + number of collaborations with Person & MusicalGroup\n\n\n\n\n\nThe Public Recognition tab compares how often each artist’s work charted in public rankings. Users can:\n\nSelect up to three artists (A, B, and C) for comparison\nView a stacked bar chart that contrasts the number of charted versus uncharted releases per artist\nExplore a detailed table listing each artist’s songs or albums along with their release year, type, and chart status\nAnalyze recognition trends and identify which artists consistently achieve public acclaim\n\n\n\n\nCode\n# UI\n\nPublicRecognitionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Charted vs Uncharted Songs\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Stacked bar chart for releases\n    )\n  ),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Detailed list of songs/albums and chart status\n    )\n  )\n)\n\n# Server\noutput$charted_vs_uncharted &lt;- renderPlot({}) # Create a stacked bar chart showing Charted vs Uncharted songs per artist\noutput$charted_table &lt;- DT::renderDataTable({}) # Table with artist name, song/album, year, type, and charted status\n\n\n\n\n\nThe Predictions tab identifies emerging talents most likely to become the next big names in Oceanus Folk. Users can:\n\nExplore a ranked table of rising stars, sorted by calculated “Rising Star Score”\nReview artist attributes including first release year, total works, collaborations, freshness, and inactivity\nUnderstand how metrics like charted ratio and creative activity contribute to the prediction\nRead a description that explains how the prediction model works and what each variable means\n\n\n\n\nCode\n# UI\n\nPredictionsTab &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk Next Rising Star\"),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Main prediction result table\n    )\n  ),\n  \n  fluidRow(\n    column(tabsetPanel(\n        tabPanel(\n          title = \"Description\",\n          wellPanel(verbatimTextOutput(\"rising_star_description\") # Descriptive Explanation\n          )\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$rising_star_table &lt;- DT::renderDataTable({}) # Table with columns like: Artist, ID, First Release, Total Works, etc.\noutput$rising_star_description &lt;- renderText({}) # Explanation of the Rising Star Score and what users should interpret"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#rising-star-prediction-dashboard",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03_Final.html#rising-star-prediction-dashboard",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "The Activity tab provides a comparative view of artists’ release behaviors and performance history.\nUsers can:\n\nSelect up to three artists (A, B, and C) for side-by-side comparison\nView individual network graphs showing each artist’s release and influence structure\nAnalyze a timeline line chart of songs or albums released by the selected artists over time\nTrack activity trends to identify peak creative periods and gaps across artist careers\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsActivityTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Activity\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist A\n    ),\n    column(\n      plotOutput() # Plot for Artist B\n    )\n  ),\n  \n  fluidRow(\n    column(\n      plotOutput() # Plot for Artist C\n    ),\n    column(\n      plotOutput() # Line graph comparing release trends\n    )\n  )\n)\n\n# Server\n\noutput$artist_a_network &lt;- renderPlot({})\noutput$artist_b_network &lt;- renderPlot({})\noutput$artist_c_network &lt;- renderPlot({})\noutput$release_timeline &lt;- renderPlot({})\n\n\n\n\n\nThe Contribution tab highlights the creative roles played by artists in Oceanus Folk.\nUsers can:\n\nSelect and compare up to three artists (A, B, and C)\nExplore network graphs that visualize each artist’s contributions as a composer, lyricist, or producer\nAnalyze a contribution table showing the number of works attributed to each role\nIdentify key contributors to the genre’s development through their behind-the-scenes impact\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsContributionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Contribution\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Contribution_table\n    )\n  )\n)\n\n# Server\noutput$contrib_graph_a &lt;- renderPlot({}) # Network graph for Artist A's contributions (ComposerOf, LyricistOf, ProducerOf)\noutput$contrib_graph_b &lt;- renderPlot({}) # Network graph for Artist B's contributions\noutput$contrib_graph_c &lt;- renderPlot({}) # Network graph for Artist C's contributions\n\noutput$contribution_table &lt;- DT::renderDataTable({}) # DataTable showing ComposerOf, LyricistOf, and ProducerOf for selected artists\n\n\n\n\n\nThe Artist’s Collaboration tab showcases the collaborative relationships of Oceanus Folk artists. Users can:\n\nSelect and compare up to three artists (A, B, and C)\nVisualize each artist’s collaboration network with individuals and musical groups\nAnalyze differences in collaboration patterns using structured network graphs\nRefer to a summary table that lists the number of collaborations with persons and musical groups per artist\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\nArtistsCollaborationTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Collaboration\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist A Network Graph\n    ),\n    column(plotOutput() # Artist B Network Graph\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Artist C Network Graph\n    ),\n    column(DT::dataTableOutput() # Collaboration_table\n    )\n  )\n)\n\n# Server\noutput$collab_graph_a &lt;- renderPlot({}) # Network plot showing Artist A's collaborations\noutput$collab_graph_b &lt;- renderPlot({}) # Network plot showing Artist B's collaborations\noutput$collab_graph_c &lt;- renderPlot({}) # Network plot showing Artist C's collaborations\noutput$collaboration_table &lt;- DT::renderDataTable({}) # Table showing artist + number of collaborations with Person & MusicalGroup\n\n\n\n\n\nThe Public Recognition tab compares how often each artist’s work charted in public rankings. Users can:\n\nSelect up to three artists (A, B, and C) for comparison\nView a stacked bar chart that contrasts the number of charted versus uncharted releases per artist\nExplore a detailed table listing each artist’s songs or albums along with their release year, type, and chart status\nAnalyze recognition trends and identify which artists consistently achieve public acclaim\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\n\nPublicRecognitionTab &lt;- fluidPage(\n  titlePanel(\"Artist’s Charted vs Uncharted Songs\"),\n  \n  fluidRow(\n    column(selectInput(choices = c()) # Dropdown for Artist A\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist B\n    ),\n    column(selectInput(choices = c()) # Dropdown for Artist C\n    )\n  ),\n  \n  fluidRow(\n    column(plotOutput() # Stacked bar chart for releases\n    )\n  ),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Detailed list of songs/albums and chart status\n    )\n  )\n)\n\n# Server\noutput$charted_vs_uncharted &lt;- renderPlot({}) # Create a stacked bar chart showing Charted vs Uncharted songs per artist\noutput$charted_table &lt;- DT::renderDataTable({}) # Table with artist name, song/album, year, type, and charted status\n\n\n\n\n\nThe Predictions tab identifies emerging talents most likely to become the next big names in Oceanus Folk. Users can:\n\nExplore a ranked table of rising stars, sorted by calculated “Rising Star Score”\nReview artist attributes including first release year, total works, collaborations, freshness, and inactivity\nUnderstand how metrics like charted ratio and creative activity contribute to the prediction\nRead a description that explains how the prediction model works and what each variable means\n\n Code chunk below shows the simplified version of UI and Server components in R Shiny application for Overview sub-tab.\n\n\nCode\n# UI\n\nPredictionsTab &lt;- fluidPage(\n  titlePanel(\"Oceanus Folk Next Rising Star\"),\n  \n  fluidRow(\n    column(DT::dataTableOutput() # Main prediction result table\n    )\n  ),\n  \n  fluidRow(\n    column(tabsetPanel(\n        tabPanel(\n          title = \"Description\",\n          wellPanel(verbatimTextOutput(\"rising_star_description\") # Descriptive Explanation\n          )\n        )\n      )\n    )\n  )\n)\n\n# Server\noutput$rising_star_table &lt;- DT::renderDataTable({}) # Table with columns like: Artist, ID, First Release, Total Works, etc.\noutput$rising_star_description &lt;- renderText({}) # Explanation of the Rising Star Score and what users should interpret"
  }
]